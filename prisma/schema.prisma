// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// prisma/schema.prisma
model User {
  id            String         @id // Store Kinde ID as string
  name          String?
  email         String?        @unique
  image         String?
  favorites     Favorite[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt

  @@index([email])
}

model Movie {
  id           String     @id // Store TMDB ID as string
  title        String
  posterPath   String?
  favorites    Favorite[]
  favCount     Int        @default(0) // Denormalized count for performance
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

 @@index([favCount])
  @@index([title])
}

model Favorite {
  id        String   @id @default(cuid())
  userId    String
  movieId   String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  movie     Movie    @relation(fields: [movieId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())

  @@unique([userId, movieId])
  @@index([userId])
  @@index([movieId])
  @@index([createdAt])
}